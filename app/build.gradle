apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        applicationId "com.evartem.remsimon"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // Disable LeakCanary for unit and instrumentation tests (supply no-op version)
    configurations.all { config ->
        if (config.name.contains('UnitTest') || config.name.contains('AndroidTest')) {
            config.resolutionStrategy.eachDependency { details ->
                if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                    details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
                }
            }
        }
    }
}



dependencies {

    def supportLibraryVersion = '28.0.0'
    def butterknifeVersion = '8.8.1'
    def roomVersion = "1.1.1"
    def guavaVersion = "26.0-jre"
    def jodaTimeVersion = "2.9.9.4"
    def leakCanaryVersion = "1.6.3"
    def moshiVersion = "1.6.0"
    def timberVersion = "4.7.1"
    def junitVersion = "4.12"
    def mockitoVersion = "2.22.0"
    def hamcrestVersion = "1.3"
    def daggerVersion = "2.18"
    def retrofitVersion = "2.5.0"
    def okHttpVersion = "3.12.0"
    def gsonVersion = "2.8.5"

    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation ("com.squareup.retrofit2:retrofit:$retrofitVersion") {exclude group: 'com.squareup.okhttp3'}

    implementation 'com.github.stealthcopter:AndroidNetworkTools:0.4.3'

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"

    implementation "android.arch.persistence.room:runtime:$roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation "com.google.guava:guava:$guavaVersion"
    implementation "net.danlew:android.joda:$jodaTimeVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation 'org.robolectric:robolectric:4.1'
    testImplementation 'com.github.andrzejchm.RESTMock:android:0.3.2'

    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    androidTestImplementation 'com.github.andrzejchm.RESTMock:android:0.3.2'

    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leakCanaryVersion"

    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"


    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
        }
        afterTest { desc, result ->
            println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
        }
    }
}